class Solution {
    public int lengthOfLongestSubstring(String s) {
        
        //Using HashMap
        //3. Longest Substring Without Repeating Characters
        //Time complexity is O(n)
        //Space complexity is  O(1)
        
        if(s== null || s.length()==0)
            return 0;
        HashMap<Character,Integer> map = new HashMap<>();
        int index =0;
        int max =0;
       for(int i =0;i < s.length();i++){
           
           char ch = s.charAt(i);
           if(map.containsKey(ch)){
               
               index = Math.max(map.get(ch),index);
                
           }
              
           
               max = Math.max(max,i-index+1);
               map.put(ch,i+1);
           
       }
        return max;
    }
}