Time complexity: O(n)
Space complexity: O(n)
Did this code successfully submitted on leetcode: Yes

class Solution {
    public int lengthOfLongestSubstring(String s) {
        
        //Base case
        if(s==null || s.length()==0)
            return 0;
        
        int max = 0;
        
        Map<Character, Integer> hmap = new HashMap<>();
        
        int slow =0, fast =0;
        
        while(fast<s.length()){
           
            Character c = s.charAt(fast);
            
            if(hmap.containsKey(c)){
                slow = Math.max(slow,hmap.get(c));
            }
            hmap.put(c, fast+1);
            
            max = Math.max(max, fast-slow+1);
            
            fast++;
        }
        
        return max;
    }
}
