//timeComplexity. O(n)
//spacecompleixty O(1)

class Solution {
    public String customSortString(String order, String s) {
       
    StringBuilder sb = new StringBuilder();
    HashMap<Character,Integer> map = new HashMap<>();
    
    for(int i = 0; i < s.length(); i++){
        char ch = s.charAt(i);
        map.put(ch,map.getOrDefault(ch,0)+1);
    }

    for(int i = 0; i < order.length(); i++){
         char ch = order.charAt(i);
        if(map.containsKey(ch)){
            while(map.get(ch) > 0){
                sb.append(ch);
                map.put(ch,map.get(ch)-1);
            }
        }
    }

    for(char key : map.keySet()){
        if(map.get(key) > 0){
            while(map.get(key) > 0){
                sb.append(key);
                map.put(key,map.get(key)-1);
            }
        
        }
    }
            
        return sb.toString();
    }
}
