// TC - O(m + n) where m - lenth of order, n - length of s
// SC - O(1) as there are only 26 lower case chars

class Solution {
    public String customSortString(String order, String s) {
        HashMap<Character, Integer> map = new HashMap<>();
        
        for(char c: s.toCharArray())
        {
            map.put(c, map.getOrDefault(c, 0) + 1);
        }
        
        StringBuffer sb = new StringBuffer();
        
        for(char c: order.toCharArray())
        {
            if(map.containsKey(c))
            {
                for(int i = 0; i < map.get(c); i++)
                {
                    sb.append(c);
                }
                map.remove(c);
            }
        }
        if(!map.isEmpty())
        {
            for(char c : map.keySet())
            {
                for(int i = 0; i < map.get(c); i++)
                {
                    sb.append(c);
                }
            }
        }
            
        return sb.toString();
    }
}

