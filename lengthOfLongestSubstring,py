# Time complexity -> O(n)
# Space complexity-> O(1) since its only 26 charcters
class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        hashMap = {}
        slow = 0
        res = 0 
        
        for fast in range(len(s)):
            if s[fast] in hashMap:
                slow = max(slow,hashMap[s[fast]])
            
            if fast-slow+1 > res:
                res = fast-slow+1
                
            hashMap[s[fast]] = fast+1 
            
        return res