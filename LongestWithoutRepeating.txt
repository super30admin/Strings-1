// Time Complexity o(n) space complexity o(1)
class Solution {
    public int lengthOfLongestSubstring(String s) {
       HashMap<Character,Integer> map = new HashMap<>();
       int slow=0;
       int max=0;
       for(int i=0;i<s.length();i++){
          char c = s.charAt(i);
          if(map.containsKey(c)){
              // repeat
              slow = Math.max(slow,map.get(c)+1);
          } 
          map.put(c,i);
          max=Math.max(max,i-slow+1);
       } 
       return max;
    }
}