// Time Complexity : n
// Space Complexity :n
// Did this code successfully run on Leetcode :yes
// Three line explanation of solution in plain english

// Your code here along with comments explaining your approach
class Solution {
    public int lengthOfLongestSubstring(String s) {
        if(s==null || s.length()==0){
            return 0;
        }
         int i=0;
        int j=0;
        int max = Integer.MIN_VALUE;
        HashSet<Character> set = new HashSet<>();
        while(j<s.length()){
            if(!set.contains(s.charAt(j))){
                
                set.add(s.charAt(j));
                j++;
                max = Math.max(max, set.size());
            }
            else{
                set.remove(s.charAt(i));
                i++;
            }
        }
        return max;
    }
}